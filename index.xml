<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Syndesis - Open source integration platform</title>
    <link>https://zregvart.github.io/syndesis.io/</link>
    <description>Recent content on Syndesis - Open source integration platform</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 16 May 2017 15:58:18 +0100</lastBuildDate>
    
	<atom:link href="https://zregvart.github.io/syndesis.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What is a Connector</title>
      <link>https://zregvart.github.io/syndesis.io/docs/connectors/whatis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/connectors/whatis/</guid>
      <description>Syndesis use Connectors to communicate with an integration platform and its underlying components. An integration platform like Apache Camel, our choice of reference, typically has one or more components used to communicate with external data sources. A connector is a proxy to that component, and is used to instruct Syndesis what that component is expecting and how to communicate with it.
Put in other words, the goal of the Connector proxy is to simplify or provide additional logic to what is expected by an integration platform&amp;rsquo;s component.</description>
    </item>
    
    <item>
      <title>What is an Extension</title>
      <link>https://zregvart.github.io/syndesis.io/docs/extensions/whatis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/extensions/whatis/</guid>
      <description>Syndesis is a platform designed to provide maximum flexibility to your integrations. Most of the time you will be fine using the connectors and other tools provided, but, in a certain situation you may feel you need something specific to your business goal. For that situation we&amp;rsquo;ve thought to provide a special mechanism called Extension.
An extension is a dedicate development that will enhance the functionality of your platform and integration runtime by adding any custom behavior you need.</description>
    </item>
    
    <item>
      <title>Create a Connector</title>
      <link>https://zregvart.github.io/syndesis.io/docs/connectors/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/connectors/create/</guid>
      <description>If Syndesis does not provide a connector for the application or service that you want to connect to in an integration, an experienced developer can develop and contribute a new Syndesis connector.
This documentation provides details about developing, testing, and deploying a new Syndesis connector. It uses the example of creating the MongoDB connector to illustrate internal behavior and analyze development choices.
Before you start to develop a connector, you should:</description>
    </item>
    
    <item>
      <title>Create an Extension</title>
      <link>https://zregvart.github.io/syndesis.io/docs/extensions/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/extensions/create/</guid>
      <description>This documentation provides details about developing and deploying a new Syndesis extension. It uses the example of creating the validate EIP to illustrate how to create one. With this Step extension we will be able to validate any incoming message according to a configured rule. If the message does not match the rule the integration will raise an error.
In the rest of the document we will learn how to develop a custom extension and include the validate behavior, how to import it into Syndesis platform and finally how to use it in an integration.</description>
    </item>
    
    <item>
      <title>Development QuickStart</title>
      <link>https://zregvart.github.io/syndesis.io/docs/development_quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/development_quickstart/</guid>
      <description>If you’d like to get a local development environment up and running, for both the UI and REST API, this is how you’d do it.
Tips
 Build on branch, not master. Callback URL Example: https://syndesis.192.168.64.29.nip.io/api/v1/credentials/callback  Requirements You can follow these steps if it’s your first time setting up Syndesis, or if you want a fresh local installation to replace an existing one. Some environment-specific instructions may be available below as well.</description>
    </item>
    
    <item>
      <title>Syndesis CLI</title>
      <link>https://zregvart.github.io/syndesis.io/docs/cli/syndesis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/cli/syndesis/</guid>
      <description>Buildtool &amp;ldquo;syndesis&amp;rdquo; Syndesis uses a single tool for controlling various aspects of the build and developer related tasks. This script can be found in $SYNDESIS_DIR/tools/bin and is called syndesis. It requires bash and can be used on any Unix or macOS.
To have this script handy all the time it is recommended to either put this bin/ directory into the path or add a symlink from syndesis into a directory which is already on your execution path.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://zregvart.github.io/syndesis.io/quickstart/</link>
      <pubDate>Tue, 16 May 2017 15:58:18 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/quickstart/</guid>
      <description>You can try out Syndesis very easily locally, too. All you need is a Minishift installation which is available for all the major operating systems (Linux, OS X and Windows). The following examples assume that you have Minishift installed and can be called with minishift from the command line. So, minishift is supposed to be available in your search path, i.e. located in a directory contained in your $PATH environment variable (Linux, macOS) or in a directory from your system path (Windows).</description>
    </item>
    
    <item>
      <title>Connector Schema</title>
      <link>https://zregvart.github.io/syndesis.io/docs/connectors/connector-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/connectors/connector-schema/</guid>
      <description>As we&amp;rsquo;ve already seen in the Connector Development guidelines, the connection to or from a generic data source is proxied by the presence of the Connector Proxy component. In this page you will find how to configure it in all its details. The descriptor does a fundamental job in linking together the GUI (who will use the configuration to dynamically define the connector behavior), the server, the meta (which can be required to serve certain meta information dynamically) and finally the integration platform runtime where the application will run (being Apache Camel the one we use as reference).</description>
    </item>
    
    <item>
      <title>Day to Day</title>
      <link>https://zregvart.github.io/syndesis.io/docs/cli/day_to_day/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/cli/day_to_day/</guid>
      <description>Minishift We are assuming an existing Minishift instance.
Startup Make sure Minishift is running.
$ minishift status Which should look like:
$ minishift status Minishift: Running If it says something like:
$ minishift status Minishift: Stopped Then start minishift with:
$ minishift start Environment This step is required regardless of whether it’s a first-time install or not. It logs you in and points OpenShift to use Minishift resources.
$ oc login -u developer $ eval $(minishift oc-env) $ eval $(minishift docker-env) The eval’s set a number of environment variables, like change the $PATH and $DOCKER_HOST, so each time you do a Syndesis build it’s good to make sure those are invoked.</description>
    </item>
    
    <item>
      <title>Troubleshooting</title>
      <link>https://zregvart.github.io/syndesis.io/docs/cli/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/cli/troubleshooting/</guid>
      <description>Common Problems When things go wrong, you want to try to identify the area that is causing problems (UI, REST API, etc). If it’s the UI, look for errors in the browser console or the terminal to see if it’s a dependency issue.
UI Dependency Issues $ rm -rf node_modules $ yarn install Not getting latest API changes This is a known issue. This is the workaround for using the latest REST image from the Docker stream.</description>
    </item>
    
    <item>
      <title>Data Shapes</title>
      <link>https://zregvart.github.io/syndesis.io/docs/connectors/datashapes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/connectors/datashapes/</guid>
      <description>A very important feature of any integration platform is to manage transparently the data format between the source and the destination channel. Syndesis and the powerful visual data mapper tool bundled with it, simplifies this concept with the definition of a datashape.
A datashape is a way to describe any inbound/outbound message format and to allow the user to easily map each data property in the integration step: said in other words, you will be able to transform on the fly the input/output of the data involved in an integration.</description>
    </item>
    
    <item>
      <title>Connection Autodiscovery</title>
      <link>https://zregvart.github.io/syndesis.io/docs/connectors/autodiscovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/connectors/autodiscovery/</guid>
      <description>Most steps on any integration have an input data source coming from the previous step and output another data source to the following step. Each type of connector expects different data sources. These data source formats are the ones used on the mapping steps to match the output of one step to the input of the following step.
But sometimes we don&amp;rsquo;t have a pre-defined format for those data sources, but a format that is dependent on the context.</description>
    </item>
    
    <item>
      <title>Syndesis Architecture</title>
      <link>https://zregvart.github.io/syndesis.io/docs/architecture/syndesis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/architecture/syndesis/</guid>
      <description>This document illustrates at high level the core components of Syndesis and how they communicate together to serve integrations.
Heads up! The discussion provided in this document is leaving many details and additional components on purpose as it wants to be a high level approach to the architecture behind Syndesis.  Overview Syndesis is composed by several components that are deployed automatically by the operator component. To install Syndesis, you just have to deploy an instance of the operator which will take care of deploying the rest of the components and make sure there is always one healthy instance up.</description>
    </item>
    
    <item>
      <title>How to Contribute</title>
      <link>https://zregvart.github.io/syndesis.io/docs/contributing/how/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/contributing/how/</guid>
      <description>There are many ways to contribute to Syndesis. All contributions are valued and welcomed, be it fixing a typo in documentation, raising an issue to report a bug, or creating a whole new awesome feature. Don&amp;rsquo;t worry if this is your first contribution to an open source project: the Syndesis maintainers can help you if you need it.
Improving documentation Documentation is in various places in our repositories. We are committed to streamlining this, but for now there are a few different places to look.</description>
    </item>
    
    <item>
      <title>Maven Architecture</title>
      <link>https://zregvart.github.io/syndesis.io/docs/architecture/maven_architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/architecture/maven_architecture/</guid>
      <description>Maven Groups Syndesis uses Maven as build tool. Maven groups are used to separate the various Syndesis parts.
In details Syndesis consists of the following groups:
   Group Package Docker Image Description     common io.syndesis.common  Syndesis shared common module   connector io.syndesis.connector  Supported connectors   dv io.syndesis.dv  Tool that manages dynamic VDBs for the Teiid OpenShift Deployment.   extension io.</description>
    </item>
    
    <item>
      <title>Categorization</title>
      <link>https://zregvart.github.io/syndesis.io/docs/contributing/categorization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/contributing/categorization/</guid>
      <description>On this section we will explore how to contribute to the project with issues and pull requests.
Issue Labels We use GitHub labels to categorize epics, issues and tasks. They are the foundation of our process, so please use labels for issues.
 Labels are living entities. This document describes the current status and might be slightly outdated. Please send a PR to adopt this section if the label structure changes.</description>
    </item>
    
    <item>
      <title>Engineering Guidelines</title>
      <link>https://zregvart.github.io/syndesis.io/docs/contributing/engineering_guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/docs/contributing/engineering_guidelines/</guid>
      <description>Heads up! This is a work in progress... and may always be... Please check back regularly.  The Syndesis maintainers are always looking for the optimum way to develop Syndesis. We aim to have a development process that enables fast delivery across all features and components, taking into account priorities from the community. Speed of development has to be balanced against total community ownership, knowledge sharing, and stability of the software.</description>
    </item>
    
    <item>
      <title>How to use an extension</title>
      <link>https://zregvart.github.io/syndesis.io/blog/2020/04/24/extensions/</link>
      <pubDate>Fri, 24 Apr 2020 12:00:00 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/2020/04/24/extensions/</guid>
      <description>Customization is a key factor in any successful software product. Even more for an integration platform whose goal is to make heterogeneous external systems communicate between them.
Syndesis is a flexible integration platform and takes this aspect seriously providing an Extension mechanism by design. We also know that once the platform is up and running, it is desirable to have an easy way to install a customization with no need to involve IT in upgrade procedures.</description>
    </item>
    
    <item>
      <title>Version 1.9.0 Released</title>
      <link>https://zregvart.github.io/syndesis.io/blog/20200407-version-1.9/</link>
      <pubDate>Tue, 07 Apr 2020 07:00:00 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/20200407-version-1.9/</guid>
      <description>It has been a long hard way, but we have just released Syndesis 1.9.0!
This version includes many new features since latest 1.8.13 release. We have now new connectors for Kafka, Debezium, Amazon DDB and many others. It also contains several bug fixes, upgrades of dependencies and uses a newer Camel version (2.23). We encourage everyone to update their Syndesis installations to this new version. Let us know what are the new features you enjoy most!</description>
    </item>
    
    <item>
      <title>Connection autodiscovery</title>
      <link>https://zregvart.github.io/syndesis.io/blog/2020/03/02/autodiscovery/</link>
      <pubDate>Mon, 02 Mar 2020 12:00:00 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/2020/03/02/autodiscovery/</guid>
      <description>One of the most important reason why we are developing an IPAAS is to make citizen integrators life simpler. This persona must be able to quickly create integrations by composing heterogeneous sources of data. One of the typical gap that she finds is to be aware of which are those sources available. The expected scenario is to know before-hand the host names of databases, queues, REST endpoints&amp;hellip;
Datasource dashboard What if this information is automatically discovered by the platform?</description>
    </item>
    
    <item>
      <title>MongoDB connector General Available</title>
      <link>https://zregvart.github.io/syndesis.io/blog/2020/02/28/mongodb/</link>
      <pubDate>Fri, 28 Feb 2020 12:00:00 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/2020/02/28/mongodb/</guid>
      <description>MongoDB connector was first introduced in Syndesis 1.8 as tech preview feature. We&amp;rsquo;ve worked hard during the development of version 1.9 and have it now as a general available feature!
Document-oriented databases have become extremely popular in the last years becoming one of the most important NO SQL choice out there. Without any doubt, MongoDB is the most prominent solution in this space. The easiest way to learn about this connector is to play around with the MongoDB Quickstart.</description>
    </item>
    
    <item>
      <title>Community meeting the 29th of January!</title>
      <link>https://zregvart.github.io/syndesis.io/blog/meeting-29-january-2020/</link>
      <pubDate>Wed, 29 Jan 2020 09:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/meeting-29-january-2020/</guid>
      <description>There will be a new community meeting of Syndesis the 29th of January, at 13:00 UTC.
We will meet through Google Hangouts on this room.
There is an agenda that can be edited to add more talking points. The idea is to focus on building a stronger and bigger community.
You are welcome to join this meeting or join us in any of our community networking places.</description>
    </item>
    
    <item>
      <title>Syndesis at FOSDEM 2020</title>
      <link>https://zregvart.github.io/syndesis.io/blog/fosdem-2020/</link>
      <pubDate>Wed, 01 Jan 2020 09:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/fosdem-2020/</guid>
      <description>Join us at FOSDEM 2020, we&#39;ll be at the Integration Community Stand both days of the conference
  FOSDEM is a two-day free, no registration, just show up, event in Brussels, Belgium, happening each year on the first weekend of February. It is the biggest community event around free/open source software and a great place to meet in person and exchange ideas.
This year FOSDEM is on the 1st and 2nd of February at the Université libre de Bruxelles Campus du Solbosch.</description>
    </item>
    
    <item>
      <title>Community meeting the 15th of October!</title>
      <link>https://zregvart.github.io/syndesis.io/blog/meeting-15-october-2019/</link>
      <pubDate>Fri, 04 Oct 2019 09:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/meeting-15-october-2019/</guid>
      <description>There will be a new community meeting of Syndesis the 15th of October, at 13:00 UTC.
We will meet through Google Hangouts on this room.
There is an agenda that can be edited to add more talking points. The idea is to focus on building a stronger and bigger community.
You are welcome to join this meeting or join us in any of our community networking places.</description>
    </item>
    
    <item>
      <title>Full integration to Salesforce with Red Hat Integration</title>
      <link>https://zregvart.github.io/syndesis.io/blog/full-integration/</link>
      <pubDate>Wed, 13 Feb 2019 21:02:42 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/full-integration/</guid>
      <description>Series of 3 blog posts by Christina Lin
Read more..</description>
    </item>
    
    <item>
      <title>Hello World Syndesis!</title>
      <link>https://zregvart.github.io/syndesis.io/blog/quickstarts/</link>
      <pubDate>Mon, 28 Jan 2019 21:02:42 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/quickstarts/</guid>
      <description>Syndesis is an open Source Integration Platform As A Service (IPaaS), on premise or in the cloud, with no coding required. A business analyst can set up their own Twitter to Salesforce campaign and deploy the integration in a container on OpenShift.
The easiest way to try Syndesis is to use a trial of the product called Fuse Online. You can sign up at https://www.redhat.com/en/technologies/jboss-middleware/fuse-online, and skip right to the QuickStart section.</description>
    </item>
    
    <item>
      <title>No Coding Required</title>
      <link>https://zregvart.github.io/syndesis.io/blog/no-coding-required/</link>
      <pubDate>Tue, 28 Aug 2018 21:02:42 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/no-coding-required/</guid>
      <description>My presentation at SATURN 2018 about Syndesis’ Development and its Architecture
Read more..</description>
    </item>
    
    <item>
      <title>Announcing Syndesis</title>
      <link>https://zregvart.github.io/syndesis.io/blog/announcing-syndesis/</link>
      <pubDate>Wed, 10 May 2017 16:42:50 +0100</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/blog/announcing-syndesis/</guid>
      <description>The Integration Platform That’s For Everyone - No Coding Required. Best of All? Syndesis runs in the cloud or on-premise, on OpenShift or Kubernetes. The week before Red Hat Summit is always crazy, seemingly endless demo recordings, and lots of blood, sweat, and tears. So many tears. Even more so when your project is going to have it&amp;rsquo;s first public airing. And so our team is ecstatic to announce the release of Syndesis, a game-changing data integration platform that can be run in the cloud, requires no code whatsoever (but can be extended, should you be so inclined), and, in typical Red Hat fashion, is completely open source.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zregvart.github.io/syndesis.io/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/roadmap/</guid>
      <description>Roadmap Current Sprint: 12 Ends: May 12, 2017 (Fri)
Preview Release Requirements &amp;amp; Stories
JIRA Narrative
JIRA Issues for Keynote</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zregvart.github.io/syndesis.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/about/</guid>
      <description>Syndesis is a flexible platform that provides core integration capabilities as a service. With Syndesis you can integrate data coming from different sources, automate data workflows, interconnect services, conflate, and push your data to any kind of service.
It can be run on the cloud or on premises with OpenShift or Kubernetes. It is fully extensible and, best of all, it is free and open source software.
Open Source IPaaS Gartner defines an Integration Platform As A Service as a suite of cloud services enabling development, execution and governance of integration flows connecting any combination of on premises and cloud-based processes, services, applications and data within individual or across multiple organizations.</description>
    </item>
    
    <item>
      <title>Community</title>
      <link>https://zregvart.github.io/syndesis.io/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/community/</guid>
      <description>We  community! Contributions and feedback in whatever form are always welcome, as long as they&amp;rsquo;re constructive!
Here are some important links:
 QuickStarts: QuickStarts Questions: StackOverflow Source code: GitHub organization Mailing list: Syndesis Google Group Gitter: Syndesis on Gitter Twitter: @Syndesisio YouTube: YouTube  </description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://zregvart.github.io/syndesis.io/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zregvart.github.io/syndesis.io/faq/</guid>
      <description>Syndesis looks awesome. Who is it for? Anyone that wants to integrate services. Syndesis includes a swish UI that enables the user to design integration flows and manage them from their browser.
No coding required&amp;hellip; Unless you really want to and then Syndesis allows you to dive into the code, develop your own connectors (if one doesn&amp;rsquo;t already exist), or hack on the integration definition directly.
How to read logs?</description>
    </item>
    
  </channel>
</rss>